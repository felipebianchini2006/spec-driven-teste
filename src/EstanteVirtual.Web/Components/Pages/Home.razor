@page "/"
@rendermode InteractiveServer
@using EstanteVirtual.Web.Services
@inject BookApiService BookApiService

<PageTitle>Estante Virtual - Minha Coleção</PageTitle>

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="mb-3">📚 Estante Virtual</h1>
            <p class="lead">Organize sua coleção de livros e compartilhe suas opiniões!</p>
        </div>
    </div>

    <div class="row mb-5">
        <div class="col-lg-6 col-xl-5">
            <div class="card shadow-sm">
                <div class="card-body">
                    <AddBookForm OnBookAdded="HandleBookAdded" />
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h2 class="mb-4">Minha Coleção (@books.Count livros)</h2>
            
            @if (isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                    <p class="mt-3">Carregando sua estante...</p>
                </div>
            }
            else if (!books.Any())
            {
                <div class="empty-state text-center py-5">
                    <div class="empty-icon mb-4">📚</div>
                    <h3>Sua estante está vazia</h3>
                    <p class="text-muted">Adicione seu primeiro livro usando o formulário acima!</p>
                </div>
            }
            else
            {
                <div class="books-grid">
                    @foreach (var book in books)
                    {
                        <BookCard Book="book" />
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<BookDto> books = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadBooks();
    }

    private async Task HandleBookAdded(BookDto book)
    {
        Console.WriteLine($"Livro adicionado: {book.Title}");
        
        // Recarrega a galeria após adicionar um livro
        await LoadBooks();
        StateHasChanged();
    }

    private async Task LoadBooks()
    {
        isLoading = true;
        books = await BookApiService.GetAllBooksAsync();
        isLoading = false;
    }
}
